version: "3.7"

services:
  proxy:
    container_name: di-proxy
    build:
      context: proxy/.
      dockerfile: Dockerfile.dev
    ports:
      - 99:80
    restart: on-failure:3

  api:
    container_name: di-api
    build:
      context: server/.
      dockerfile: Dockerfile.dev
    ports:
      - 8001:80
    volumes:
      - ./server:/app
      - /var/run/docker.sock:/var/run/docker.sock

    stdin_open: true
    tty: true
    depends_on:
      - database
    env_file:
      - .env
    restart: on-failure:3

  # ws-api:
  #   container_name: di-dev-ws-api
  #   build:
  #     context: server/.
  #     dockerfile: Dockerfile.dev
  #   ports:
  #     - 8002:80
  #   volumes:
  #     - ./server:/app
  #     - /var/run/docker.sock:/var/run/docker.sock

  #   stdin_open: true
  #   tty: true
  #   depends_on:
  #     - database
  #   env_file:
  #     - .env
  #   restart: on-failure:3

  database:
    container_name: di-db
    build: database/.
    volumes:
      - ./database/db_data:/var/lib/postgresql
    env_file:
      - .env
    restart: on-failure:3

  client:
    container_name: di-ui
    build:
      context: client/.
      dockerfile: Dockerfile.dev
    stdin_open: true
    volumes:
      - ./client:/app
      - ./client/node_modules:/app/node_modules
    ports:
      - 3000:3000
    env_file:
      - .env
    environment:
      - NODE_PATH=./src
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - COMPOSE_CONVERT_WINDOWS_PATHS=1
    restart: on-failure:3
